# https://help.dreamhost.com/hc/en-us/articles/222784068-The-most-important-steps-to-take-to-make-an-nginx-server-more-secure
# https://nginx.org/en/docs/http/configuring_https_servers.html

server {
    listen 8080 default_server;

    # Support IPv6.
    listen [::]:8080 default_server;

    # _ means this server is responsible for all incoming requests.
    server_name _;

    # Redirect all HTTP requests to HTTPS.
    # https://serversforhackers.com/c/redirect-http-to-https-nginx
    return 301 https://$host$request_uri;
}

server {
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-16-04
    listen 8443 ssl http2 default_server;

    # Support IPv6.
    listen [::]:8443 ssl http2 default_server;

    # _ means this server is responsible for all incoming requests.
    server_name _;

    charset utf-8;

    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html
    ssl_certificate     /run/secrets/fullchain;
    ssl_certificate_key /run/secrets/privkey;

    # Support OCSP stapling.
    #ssl_stapling on;
    #ssl_stapling_verify on;

    # Support session resumption.
    # See
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-16-04.
    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 1h;

    # https://www.linode.com/docs/web-servers/nginx/enable-tls-on-nginx-for-https-connections/
    # https://www.dynatrace.com/news/blog/end-of-support-for-internet-explorer-11-and-tls-versions-1-0-and-1-1/
    # https://www.digicert.com/blog/depreciating-tls-1-0-and-1-1/
    # https://geekflare.com/enable-tls-1-3/
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # The following list of ciphers came from:
    # https://nodejs.org/api/tls.html.
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA";

    # Support CAC authentication.
    # https://github.com/mpyne-navy/nginx-cac
    #ssl_verify_client on;
    #ssl_verify_depth 4; # Allow intermediate CAs.
    #ssl_client_certificate /etc/nginx/dod-roots.crt;
    # Inform the proxied app which user has connected to this TLS endpoint.
    #add_header X-Subject-DN $ssl_client_s_dn;
    #add_header X-Client-Verified $ssl_client_verify;

    # https://scotthelme.co.uk/hardening-your-http-response-headers/

    # https://scotthelme.co.uk/a-new-security-header-referrer-policy/
    add_header Referrer-Policy "no-referrer" always;

    # https://scotthelme.co.uk/hsts-preloading/
    # https://hstspreload.org/
    # https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # https://serverfault.com/questions/765258/use-http-2-0-between-nginx-reverse-proxy-and-backend-webserver
    # Update start-server.sh if you use a proxied server.
    #location / {
    #    proxy_pass https://container-name:8443;
    #    proxy_http_version 1.1;
    #}

    #error_page  404              /404.html;

    # https://stackoverflow.com/questions/13695155/how-to-test-nginx-errors
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
